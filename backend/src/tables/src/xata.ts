// Generated by Xata Codegen 0.30.1. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "User",
    columns: [
      { name: "name", type: "string" },
      { name: "email", type: "email", unique: true },
      { name: "password", type: "string" },
      { name: "role", type: "string" },
    ],
    revLinks: [
      { column: "adminId", table: "Team" },
      { column: "assignedToId", table: "Task" },
      { column: "userId", table: "Comment" },
    ],
  },
  {
    name: "Team",
    columns: [
      { name: "name", type: "string" },
      { name: "description", type: "text" },
      { name: "adminId", type: "link", link: { table: "User" } },
      { name: "members", type: "multiple", link: { table: "User" } },
    ],
    revLinks: [{ column: "teamId", table: "Project" }],
  },
  {
    name: "Project",
    columns: [
      { name: "name", type: "string" },
      { name: "teamId", type: "link", link: { table: "Team" } },
    ],
    revLinks: [{ column: "projectId", table: "Task" }],
  },
  {
    name: "Task",
    columns: [
      { name: "description", type: "text" },
      { name: "status", type: "string" },
      { name: "dueDate", type: "datetime" },
      { name: "projectId", type: "link", link: { table: "Project" } },
      { name: "assignedToId", type: "link", link: { table: "User" } },
    ],
    revLinks: [{ column: "taskId", table: "Comment" }],
  },
  {
    name: "Comment",
    columns: [
      { name: "content", type: "text" },
      { name: "taskId", type: "link", link: { table: "Task" } },
      { name: "userId", type: "link", link: { table: "User" } },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type User = InferredTypes["User"];
export type UserRecord = User & XataRecord;

export type Team = InferredTypes["Team"];
export type TeamRecord = Team & XataRecord;

export type Project = InferredTypes["Project"];
export type ProjectRecord = Project & XataRecord;

export type Task = InferredTypes["Task"];
export type TaskRecord = Task & XataRecord;

export type Comment = InferredTypes["Comment"];
export type CommentRecord = Comment & XataRecord;

export type DatabaseSchema = {
  User: UserRecord;
  Team: TeamRecord;
  Project: ProjectRecord;
  Task: TaskRecord;
  Comment: CommentRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://Luckshakira-Kanana-s-workspace-6oiat3.ap-southeast-2.xata.sh/db/tables",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
